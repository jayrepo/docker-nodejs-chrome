name: CI

on:
  schedule:
    - cron:  '12 0 * * *'

  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    container: node:current
    outputs:
      version: ${{ steps.ver.outputs.version }}
      shortVersion: ${{ steps.ver.outputs.shortVersion }}
      hasUpdate: ${{ steps.comp.outputs.hasUpdate }}
    
    steps:
      - name: Version
        id: ver
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmour -o /usr/share/keyrings/google-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
          apt-get update -qqy
          apt-get -qqy install jq

          CHROME_VERSION=$(apt-cache show google-chrome-stable | grep Version | awk '{print $2}' | cut -d '-' -f 1)
          NODE_VERSION=$(node -v | sed -E "s/v([0-9.]+)/\1/")

          VERSION="${NODE_VERSION}-${CHROME_VERSION}"
          echo $VERSION

          SHORT_VERSION="${NODE_VERSION%%.*}-${CHROME_VERSION%%.*}"
          echo $SHORT_VERSION

          LATEST_VERSION=$(curl https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE)
          echo $LATEST_VERSION
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "shortVersion=${SHORT_VERSION}" >> $GITHUB_OUTPUT
          echo "chromeVersion=${CHROME_VERSION}" >> $GITHUB_OUTPUT
          echo "latestVersion=${LATEST_VERSION}" >> $GITHUB_OUTPUT

      - uses: madhead/semver-utils@latest
        id: semver
        with:
          version: steps.ver.outputs.chromeVersion
          compare-to: steps.ver.outputs.latestVersion
    
      - name: Checkout
        uses: actions/checkout@v3

      - name: Compare
        id: comp
        shell: bash
        run: |
          if [[ $(< version) == "${{steps.ver.outputs.version}}" ]]; then
              echo "same version"
              echo "hasUpdate=0" >> $GITHUB_OUTPUT
          elif [[ "${{steps.semver.outputs.comparison-result}}" ==  ">" ]]; then
              echo "latest driver not available"
              echo "hasUpdate=0" >> $GITHUB_OUTPUT
          else
              echo "hasUpdate=1" >> $GITHUB_OUTPUT
          fi
          
  build:
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.hasUpdate == '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            jayrepo/nodejs-chrome:latest
            jayrepo/nodejs-chrome:${{ needs.version.outputs.version }}
            jayrepo/nodejs-chrome:${{ needs.version.outputs.shortVersion }}
      - name: Commit and Push
        id: push
        run: |
          echo "${{needs.version.outputs.version}}" > version
          git config --global user.name 'Jay'
          git config --global user.email 'jayrepo@users.noreply.github.com'
          git config --global --add safe.directory '*'
          git add version
          set +e
          git commit -m "bump version to ${{needs.version.outputs.version}}"
          echo "exitCode=$?" >> $GITHUB_OUTPUT
          git push
